using AutoMapper;
using MediatR;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;
using {ServiceNamespace}.{ServiceName};

namespace {ControllerNamespace}.{ServiceName}
{
    [ApiVersion("1")]
    [Route("api/v{version:apiVersion}/{ControllerName}")]
    [ApiController]
    public class {ServiceName}Controller : ControllerBase
    {
        private readonly IMediator _mediator;
        private readonly IMapper _mapper;

        public {ServiceName}Controller(
            IMediator mediator,
            IMapper mapper)
        {
            _mediator = mediator;
            _mapper = mapper;
        }

        [{HttpMethod}("{ServiceRoute}")]
        [ProducesResponseType(StatusCodes.Status204NoContent)]
        [ProducesResponseType(StatusCodes.Status400BadRequest)]
        [ProducesResponseType(StatusCodes.Status500InternalServerError)]
        public async Task<IActionResult> {ServiceName}()
        {
            var input = new {ServiceName}Input() { };

            var output = await _mediator.Send(input);
            if (output.IsValid)
            {
                return Ok();
            }

            return BadRequest(output.ErrorMessages);
        }
    }
}
